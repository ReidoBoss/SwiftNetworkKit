name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  SWIFT_VERSION: 5.9

jobs:
  test:
    name: Test
    runs-on: macos-latest
    strategy:
      matrix:
        destination:
          - platform=macOS
          - platform=iOS Simulator,name=iPhone 15
          - platform=watchOS Simulator,name=Apple Watch Series 9 (45mm)
          - platform=tvOS Simulator,name=Apple TV 4K (3rd generation)
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
        
    - name: Swift Package Manager Cache
      uses: actions/cache@v3
      with:
        path: .build
        key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
        restore-keys: |
          ${{ runner.os }}-spm-
          
    - name: Build
      run: swift build -v
      
    - name: Run Tests
      run: swift test --enable-code-coverage
      
    - name: Generate Code Coverage Report
      run: |
        xcrun llvm-cov export -format="lcov" \
          .build/debug/SwiftNetworkKitPackageTests.xctest/Contents/MacOS/SwiftNetworkKitPackageTests \
          -instr-profile .build/debug/codecov/default.profdata > coverage.lcov
        
    - name: Upload Coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.lcov
        fail_ci_if_error: false

  lint:
    name: SwiftLint
    runs-on: macos-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: SwiftLint
      uses: norio-nomura/action-swiftlint@3.2.1
      with:
        args: --strict

  validate-package:
    name: Validate Swift Package
    runs-on: macos-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Validate Package
      run: swift package dump-package
      
    - name: Check Package Dependencies
      run: swift package show-dependencies

  documentation:
    name: Documentation
    runs-on: macos-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
        
    - name: Build Documentation
      run: |
        swift package --allow-writing-to-directory docs \
          generate-documentation --target SwiftNetworkKit \
          --disable-indexing \
          --transform-for-static-hosting \
          --hosting-base-path SwiftNetworkKit \
          --output-path docs
          
    - name: Deploy to GitHub Pages
      if: github.ref == 'refs/heads/main'
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./docs

  release:
    name: Release
    runs-on: macos-latest
    needs: [test, lint, validate-package]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        
    - name: Install semantic-release
      run: |
        npm install -g semantic-release @semantic-release/changelog @semantic-release/git
        
    - name: Semantic Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: npx semantic-release